{{ if .Values.kubernetesManager.enabled -}}
{{ if .Values.dockerInit.useDockerInit -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: dispatch-kubernetes-builder
  {{- if .Values.kubernetesManager.builderNamespace }}
  namespace: {{ .Values.kubernetesManager.builderNamespace }}
  {{- else }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
data:
  initsh.properties: |
    #!/bin/bash
    set -x

    mkdir  -p /data/devops
    cd /data/devops

    mkdir -p logs
    echo "start to download the docker_init.sh..." > logs/docker.log
    # sleep 1000

    curl -k -s -H "X-DEVOPS-BUILD-TYPE: DOCKER" -H "X-DEVOPS-PROJECT-ID: ${devops_project_id}" -H "X-DEVOPS-AGENT-ID: ${devops_agent_id}" -H "X-DEVOPS-AGENT-SECRET-KEY: ${devops_agent_secret_key}" -o  docker_init.sh "${devops_gateway}/static/bkrepo/files/docker_init.sh" -L

    echo docker_init
    cat docker_init.sh

    echo "download docker_init.sh success, start it..." >> logs/docker.log

    if [ -d "/data/bkdevops/apps/jdk/KonaJDK8_landun" ]; then
      echo "local /data/bkdevops/apps/jdk/KonaJDK8_landun is exsited,copy jre to /usr/local/jre" > logs/docker.log
      cp -r /data/bkdevops/apps/jdk/KonaJDK8_landun /usr/local/jre >>/data/logs/docker.log 2>&1
    else
      echo "local /data/bkdevops/apps/jdk/KonaJDK8_landun is not exsited." > logs/docker.log
    fi
  
    #mkdir -p  /usr/local/jre/bin/
    #ln -s /usr/bin/java /usr/local/jre/bin/

    cat docker_init.sh >> logs/docker.log
    sh docker_init.sh $@
  sleepsh.properties: |
    #!/bin/sh

    unset_proxy() {
      unset http_proxy
      unset https_proxy
      unset ftp_proxy
      unset no_proxy
      unset all_proxy
      unset HTTP_PROXY
      unset HTTPS_PROXY
      unset FTP_PROXY
      unset NO_PROXY
      unset ALL_PROXY
    }

    echo  "unset proxy"
    unset_proxy

    while true
    do
    sleep 5m
    done

{{- end -}}
{{- end -}}
